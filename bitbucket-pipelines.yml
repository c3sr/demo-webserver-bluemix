# This is a sample build configuration for Go.
# Check our guides at https://confluence.atlassian.com/x/VYk8Lw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: golang:1.7

pipelines:
  default:
    - step:
        script: # Modify the commands below to build your repository.
          ################################################################################
          - PACKAGE_PATH="${GOPATH}/src/bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}"
          - mkdir -pv "${PACKAGE_PATH}"
          - tar -cO --exclude-vcs --exclude=bitbucket-pipelines.yml . | tar -xv -C "${PACKAGE_PATH}"
          ################################################################################
          # install cloudfoundry cli
          ################################################################################
          - export CLOUDFOUNDRY_VERSION=6.22.1
          - export CLOUDFOUNDRY_URL="https://cli.run.pivotal.io/stable?release=debian64&version=${CLOUDFOUNDRY_VERSION}&source=github-rel"
          - echo "Downloading cli from ${CLOUDFOUNDRY_URL}"
          - wget -O cf-cli_amd64.deb ${CLOUDFOUNDRY_URL}
          - dpkg -i cf-cli_amd64.deb
          - cf -v
          - rm cf-cli_amd64.deb
          ################################################################################
          # install jq
          ################################################################################
          - wget -O jq http://stedolan.github.io/jq/download/linux64/jq
          - chmod +x jq
          - mv jq /usr/bin
          ################################################################################
          # install bluemix tools
          ################################################################################
          - export BLUMIX_VERSION=0.4.4
          - wget http://public.dhe.ibm.com/cloud/bluemix/cli/bluemix-cli/Bluemix_CLI_${BLUMIX_VERSION}_amd64.tar.gz
          - tar -xvf Bluemix_CLI_${BLUMIX_VERSION}_amd64.tar.gz
          - cd Bluemix_CLI
          - ./install_bluemix_cli
          ################################################################################
          # setup glide and godep
          ################################################################################
          - curl https://glide.sh/get | sh
          - go get github.com/tools/godep
          ################################################################################
          # start building the project
          ################################################################################
          - export VERSION=$BITBUCKET_COMMIT
          - cd "${PACKAGE_PATH}"
          ################################################################################
          # overwrite the web/_version.go file
          ################################################################################
          - export VERSIONFILE="${PACKAGE_PATH}/web/version_gen.go"
          - export BUILD_DATE=date +%Y-%m-%d:%H:%M
          - echo "package web" > ${VERSIONFILE}
          - echo "const (" >> ${VERSIONFILE}
          - echo "  versionInfo = \"$(BITBUCKET_COMMIT)\"" >> ${VERSIONFILE}
          - echo "  repository = \"$(BITBUCKET_REPO_SLUG)\"" >> ${VERSIONFILE}
          - echo "  buildTimeInfo = \"$(BUILD_DATE)\"" >> ${VERSIONFILE}
          - echo ")" >> ${VERSIONFILE}
          - gofmt -w ${VERSIONFILE}
          ################################################################################
          # setup bluemix
          ################################################################################
          - export BLUEMIX_USER=dakkak@illinois.edu ## These need to be set as
          - export BLUEMIX_ORG=IBM-ILLINOIS-C3SR ##  the bitbucket pipeline variables
          - export BLUEMIX_SPACE=dev
          - export BLUEMIX_PROJECT=p3sr-demo-webserver-bluemix
          - cf api https://api.ng.bluemix.net
          - cf auth ${BLUEMIX_USER} ${BLUEMIX_PASSWORD}
          - cf target -o ${BLUEMIX_ORG} -s ${BLUEMIX_SPACE}
          - cf a
          - cf push "${BLUEMIX_PROJECT}" -b https://github.com/cloudfoundry/go-buildpack.git
          - cf logs ${BLUEMIX_PROJECT} --recent
          ################################################################################
          # - bluemix api https://api.ng.bluemix.net
          # - bluemix login -u ${BLUEMIX_USER} -o ${BLUEMIX_ORG} -s ${BLUEMIX_SPACE}
          # - cf push "p3sr-demo-webserver"
          ################################################################################
          # - cf api https://api.ng.bluemix.net
          # - cf auth $BLUEMIX_USER $BLUEMIX_PASSWORD
          # - cf target -o $BLUEMIX_USER -s dev
          # - cf a
          # - cf push -b demo-webserver https://github.com/cloudfoundry/go-buildpack.git

# Resources:
# - https://github.com/wercker/support/issues/70#issuecomment-120198963
# - https://circleci.com/docs/deploy-bluemix/
# - http://docs.cloudfoundry.org/buildpacks/go/index.html
# - https://console.ng.bluemix.net/docs/services/ContinuousDelivery/toolchains_working.html
